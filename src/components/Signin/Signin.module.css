.contentWrapper {
    width: 90%;
    margin: auto;
}

.marginBottom5 {
    margin-bottom: 5%;
}

.emailInput {
    composes: marginBottom5;
    /* height: fit-content; */
    /** -> with this the email input on my mobile phone looked really small in height */
    width: 100%;
    border-color: darkgray;
    /* margin: auto; */
}

/*!! otherwise when it was just :focus the style wouldn't apply to the password input, just to the email one */
.emailInput:focus-within {
    border-color: #096dd9;
    border-width: 1.5px;
    /* border-right-width: 1px!important; */
    outline: 0;
    -webkit-box-shadow: 0 0 0 4px rgb(24 144 255 / 20%);
    box-shadow: 0 0 0 4px rgb(24 144 255 / 20%);
}

.emailInput::placeholder {
    color: rgb(92, 88, 88);
    font-size: 1.2em;
    /* opacity: 1; */
}

.createLink {
    font-weight: bold;
    color: #1264A3;
}

.createLink:hover {
    text-decoration: underline;
}

.mainContainer {
    text-align: center;
}

:global #password-input::placeholder {
    color: rgb(92, 88, 88);
    font-size: 1.2em;
}

.providerSigninButton {
    composes: marginBottom5;
    background-color: white;
    font-weight: bold;
    /* textShadow: 'none' */
}

.github {
    composes: providerSigninButton;
    color: black;
}

.google {
    composes: providerSigninButton;
    color: #4285f4;
}

.signInEmailButton {
    background-color: #4e004e;
    font-weight: bold;
    color: white;
    margin-bottom: 10%;
    border-color: #4e004e;
}

/*!! using :focus  it didn't work, because my value got substituted by the 
default value that comes with the component's CSS  */
.signInEmailButton:hover {
    background-color: rgb(78, 0, 78, 0.85);
    /* border: 3px solid red; */
    box-shadow: 0px 0px 5px 5px teal;
    /* box-shadow: inset 0px 0px 5px 0px; */
}

.createAccountBlock {
    display: none;
}

@media only screen and (max-width: 450px) {
    .contentWrapper {
        width: 99%;
    }

    .imageColumn {
        /* float: none; */
        margin: auto;
        max-width: fit-content;
    }

    .createAccountColumn {
        display: none;
    }

    .createAccountBlock {
        display: block;
        margin-top: 10%;
    }
}